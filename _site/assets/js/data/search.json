[
  
  {
    "title": "우여곡절 끝에 GitHub blog 페이지 띄우기 성공!!",
    "url": "/posts/%EC%95%88%EB%85%95%ED%95%98%EC%84%B8%EC%9A%94!-Github-blog-start/",
    "categories": "Blogging, Tutorial",
    "tags": "getting started",
    "date": "2023-11-29 14:35:00 +0900",
    





    
    "snippet": "아 여기까지 오기도 정말 힘들었네요.전제조건기본 환경 설치를 완료하려면 Jekyll Docs 의 지침을 따르세요. Git 도 설치해야 합니다.설치새 사이트 만들기이 테마에 대한 새 저장소를 만드는 방법에는 두 가지가 있습니다.:  Chirpy Starter 사용 - 업그레이드가 쉽고 관련 없는 프로젝트 파일을 격리하여 글쓰기에 집중할 수 있습니다.  ...",
    "content": "아 여기까지 오기도 정말 힘들었네요.전제조건기본 환경 설치를 완료하려면 Jekyll Docs 의 지침을 따르세요. Git 도 설치해야 합니다.설치새 사이트 만들기이 테마에 대한 새 저장소를 만드는 방법에는 두 가지가 있습니다.:  Chirpy Starter 사용 - 업그레이드가 쉽고 관련 없는 프로젝트 파일을 격리하여 글쓰기에 집중할 수 있습니다.  GitHub Fork - 맞춤형 개발에는 편리하지만 업그레이드가 어렵습니다. Jekyll에 익숙하지 않고 이 프로젝트를 수정하거나 기여할 생각이 없다면 이 접근 방식은 권장되지 않습니다.옵션 1. Chirpy Starter 사용GitHub에 로그인하고 Chirpy Starter 로 이동한 후, Use this template &gt; Create a new repository 버튼을 클릭하여 새로운 저장소를 만들고 저장소의 이름을 당신의 깃허브 USERNAME을 나타내는 USERNAME.github.io로 지정합니다.옵션 2. GitHub 포크GitHub에 로그인하여  fork Chirpy한 다음 저장소 이름을 USERNAME.github.io ( 당신의 깃허브 USERNAME)변경합니다.그리고 로컬 머신에서 저장소를 클론합니다. 나중에 JavaScript 파일을 빌드하려면 Node.js, 설치하고 다음 명령을 실행합니다.$ bash tools/init  만약 GitHub Pages에 사이트를 배포하지 않을 경우, 위 명령의 끝에 --no-gh 옵션을 추가하십시오..이 명령은 다음을 수행합니다.  latest tag로 코드를 확인합니다. (기본 브랜치의 코드는 개발 중이므로 안정성을 보장하기 위해 최신 태그로 이동).  비필요한 샘플 파일을 제거하고 GitHub 관련 파일을 처리합니다.  JavaScript 파일을 빌드하고 assets/js/dist/에 내보내어 Git으로 추적되도록 만듭니다.  위의 변경 사항을 저장하기 위해 자동으로 새로운 커밋을 만듭니다.의존성 설치처음으로 로컬 서버를 실행하기 전에 사이트의 루트 디렉토리로 이동하고 다음 명령을 실행하십시오.$ bundle사용법구성필요에 따라 _config.yml 파일의 변수를 업데이트하십시오. 일부는 전형적인 옵션입니다.  url  avatar  timezone  lang소셜 연락처 옵션소셜 연락처 옵션은 사이드바 아래에 표시됩니다. _data/contact.yml 파일에서 지정된 연락처를 켜거나 끌 수 있습니다.스타일시트 사용자 정의스타일시트를 사용자 정의해야 하는 경우, 테마의 assets/css/jekyll-theme-chirpy.scss 파일을 Jekyll 사이트의 동일한 경로로 복사하고 그 끝에 사용자 정의 스타일을 추가하십시오.버전 6.2.0부터, _sass/addon/variables.scss에 정의된 SASS 변수를 덮어쓰려면, 테마의 주 SCSS 파일 _sass/main.scss를 Jekyll 사이트 소스의 _sass 렉토리로 복사한 다음 새로운 파일 _sass/variables-hook.scss 를 만들어 새 값을 할당하십시오.정적 자산 사용자 정의버전 5.1.0 에서 정적 자산 구성이 소개되었습니다. 정적 자산의 CDN은 파일 _data/origin/cors.yml에 정의되어 있으며, 샤이트가 게시된 지역의 네트워크 조건에 따라 일부를 대체할 수 있습니다.또한 정적 자산을 자체 호스팅하려면 chirpy-static-assets를 참조하십시오.로컬 서버 시작게시 전에 사이트 내용을 미리보려면 다음 명령을 실행하십시오.$ bundle exec jekyll s몇 초 후에 로컬 서비스가 http://127.0.0.1:4000 게시됩니다.배포배포를 시작하기 전에 _config.yml 파일을 확인하고 url 이 올바르게 구성되어 있는지 확인하십시오. 또한 project site 를 선호하고 사용자 정의 도메인을 사용하지 않거나, GitHub Pages이외의 웹 서버에서 웹 사이트에 기본 URL로 방문하려는 경우, baseurl 을 슬래시로 시작하는 프로젝트 이름으로 변경하십시오. ex : /project-name.이제 Jekyll 사이트를 배포하는 하나의 방법을 선택할 수 있습니다.GitHub Actions를 사용하여 배포준비해야 할 몇 가지 사항이 있습니다.  GitHub Free 플랜을 사용 중이라면 사이트 저장소를 공개 상태로 유지합니다.      저장소에 Gemfile.lock 파일이 커밋되어 있고 로컬 머신이 Linux를 실행 중이 아닌 경우, 사이트 루트로 이동하여 lock 파일의 플랫폼 목록을 업데이트합니다.    $ bundle lock --add-platform x86_64-linux      그 다음, Pages 서비스를 구성합니다.      GitHub에서 저장소로 이동합니다. Settings 탭을 선택한 다음 왼쪽 탐색 모음에서 Pages 를 클릭합니다. 그런 다음 Source 섹션(Build 및  deployment 아래)의 드롭다운 메뉴에서 GitHub Actions 를 선택합니다.         GitHub에 커밋을 푸시하여 Actions 워크플로우를 트리거합니다. 저장소의 Actions 탭에서 Build and Deploy 워크플로우가 실행되는 것을 볼 수 있어야 합니다. 빌드가 완료되고 성공하면 사이트가 자동으로 배포됩니다.  이 시점에서 GitHub에서 제시된 URL로 이동하여 사이트에 액세스할 수 있습니다.수동으로 빌드 및 배포자체 호스팅된 서버에서는 GitHub Actions의 편리함을 누릴 수 없습니다. 따라서 로컬 머신에서 사이트를 빌드한 다음 사이트 파일을 서버에 업로드해야 합니다.소스 프로젝트의 루트로 이동하고 다음과 같이 사이트를 빌드합니다.$ JEKYLL_ENV=production bundle exec jekyll b출력 경로를 지정하지 않은 경우 생성된 사이트 파일은 프로젝트의 루트 디렉토리의 _site 폴더에 위치합니다. 이제 이러한 파일을 대상 서버에 업로드해야 합니다."
  },
  
  {
    "title": "hello",
    "url": "/posts/write-a-new-post/",
    "categories": "Blogging, Tutorial",
    "tags": "writing",
    "date": "2023-11-28 12:10:00 +0900",
    





    
    "snippet": "This tutorial will guide you how to write a post in the Chirpy template, and it’s worth reading even if you’ve used Jekyll before, as many features require specific variables to be set.Naming and P...",
    "content": "This tutorial will guide you how to write a post in the Chirpy template, and it’s worth reading even if you’ve used Jekyll before, as many features require specific variables to be set.Naming and PathCreate a new file named YYYY-MM-DD-TITLE.EXTENSION and put it in the _posts of the root directory. Please note that the EXTENSION must be one of md and markdown. If you want to save time of creating files, please consider using the plugin Jekyll-Compose to accomplish this.Front MatterBasically, you need to fill the Front Matter as below at the top of the post:---title: TITLEdate: YYYY-MM-DD HH:MM:SS +/-TTTTcategories: [TOP_CATEGORIE, SUB_CATEGORIE]tags: [TAG]     # TAG names should always be lowercase---  The posts’ layout has been set to post by default, so there is no need to add the variable layout in the Front Matter block.Timezone of DateIn order to accurately record the release date of a post, you should not only set up the timezone of _config.yml but also provide the post’s timezone in variable date of its Front Matter block. Format: +/-TTTT, e.g. +0800.Categories and TagsThe categories of each post are designed to contain up to two elements, and the number of elements in tags can be zero to infinity. For instance:---categories: [Animal, Insect]tags: [bee]---Author InformationThe author information of the post usually does not need to be filled in the Front Matter , they will be obtained from variables social.name and the first entry of social.links of the configuration file by default. But you can also override it as follows:Adding author information in _data/authors.yml (If your website doesn’t have this file, don’t hesitate to create one).&lt;author_id&gt;:  name: &lt;full name&gt;  twitter: &lt;twitter_of_author&gt;  url: &lt;homepage_of_author&gt;And then use author to specify a single entry or authors to specify multiple entries:---author: &lt;author_id&gt;                     # for single entry# orauthors: [&lt;author1_id&gt;, &lt;author2_id&gt;]   # for multiple entries---Having said that, the key author can also identify multiple entries.  The benefit of reading the author information from the file _data/authors.yml is that the page will have the meta tag twitter:creator, which enriches the Twitter Cards and is good for SEO.Table of ContentsBy default, the Table of Contents (TOC) is displayed on the right panel of the post. If you want to turn it off globally, go to _config.yml and set the value of variable toc to false. If you want to turn off TOC for a specific post, add the following to the post’s Front Matter:---toc: false---CommentsThe global switch of comments is defined by variable comments.active in the file _config.yml. After selecting a comment system for this variable, comments will be turned on for all posts.If you want to close the comment for a specific post, add the following to the Front Matter of the post:---comments: false---MathematicsFor website performance reasons, the mathematical feature won’t be loaded by default. But it can be enabled by:---math: true---After enabling the mathematical feature, you can add math equations with the following syntax:  Block math should be added with $$ math $$ with mandatory blank lines before and after $$  Inline math (in lines) should be added with $$ math $$ without any blank line before or after $$  Inline math (in lists) should be added with \\$$ math $$&lt;!-- Block math, keep all blank lines --&gt;$$LaTeX_math_expression$$&lt;!-- Inline math in lines, NO blank lines --&gt;\"Lorem ipsum dolor sit amet, $$ LaTeX_math_expression $$ consectetur adipiscing elit.\"&lt;!-- Inline math in lists, escape the first `$` --&gt;1. \\$$ LaTeX_math_expression $$2. \\$$ LaTeX_math_expression $$3. \\$$ LaTeX_math_expression $$MermaidMermaid is a great diagram generation tool. To enable it on your post, add the following to the YAML block:---mermaid: true---Then you can use it like other markdown languages: surround the graph code with ```mermaid and ```.ImagesCaptionAdd italics to the next line of an image, then it will become the caption and appear at the bottom of the image:![img-description](/path/to/image)_Image Caption_SizeIn order to prevent the page content layout from shifting when the image is loaded, we should set the width and height for each image.![Desktop View](/assets/img/sample/mockup.png){: width=\"700\" height=\"400\" }  For an SVG, you have to at least specify its width, otherwise it won’t be rendered.Starting from Chirpy v5.0.0, height and width support abbreviations (height → h, width → w). The following example has the same effect as the above:![Desktop View](/assets/img/sample/mockup.png){: w=\"700\" h=\"400\" }PositionBy default, the image is centered, but you can specify the position by using one of the classes normal, left, and right.  Once the position is specified, the image caption should not be added.      Normal position    Image will be left aligned in below sample:    ![Desktop View](/assets/img/sample/mockup.png){: .normal }            Float to the left    ![Desktop View](/assets/img/sample/mockup.png){: .left }            Float to the right    ![Desktop View](/assets/img/sample/mockup.png){: .right }      Dark/Light modeYou can make images follow theme preferences in dark/light mode. This requires you to prepare two images, one for dark mode and one for light mode, and then assign them a specific class (dark or light):![Light mode only](/path/to/light-mode.png){: .light }![Dark mode only](/path/to/dark-mode.png){: .dark }ShadowThe screenshots of the program window can be considered to show the shadow effect:![Desktop View](/assets/img/sample/mockup.png){: .shadow }CDN URLIf you host the images on the CDN, you can save the time of repeatedly writing the CDN URL by assigning the variable img_cdn of _config.yml file:img_cdn: https://cdn.comOnce img_cdn is assigned, the CDN URL will be added to the path of all images (images of site avatar and posts) starting with /.For instance, when using images:![The flower](/path/to/flower.png)The parsing result will automatically add the CDN prefix https://cdn.com before the image path:&lt;img src=\"https://cdn.com/path/to/flower.png\" alt=\"The flower\"&gt;Image PathWhen a post contains many images, it will be a time-consuming task to repeatedly define the path of the images. To solve this, we can define this path in the YAML block of the post:---img_path: /img/path/---And then, the image source of Markdown can write the file name directly:![The flower](flower.png)The output will be:&lt;img src=\"/img/path/flower.png\" alt=\"The flower\"&gt;Preview ImageIf you want to add an image at the top of the post, please provide an image with a resolution of 1200 x 630. Please note that if the image aspect ratio does not meet 1.91 : 1, the image will be scaled and cropped.Knowing these prerequisites, you can start setting the image’s attribute:---image:  path: /path/to/image  alt: image alternative text---Note that the img_path can also be passed to the preview image, that is, when it has been set, the  attribute path only needs the image file name.For simple use, you can also just use image to define the path.---image: /path/to/image---LQIPFor preview images:---image:  lqip: /path/to/lqip-file # or base64 URI---  You can observe LQIP in the preview image of post Text and Typography.For normal images:![Image description](/path/to/image){: lqip=\"/path/to/lqip-file\" }Pinned PostsYou can pin one or more posts to the top of the home page, and the fixed posts are sorted in reverse order according to their release date. Enable by:---pin: true---PromptsThere are several types of prompts: tip, info, warning, and danger. They can be generated by adding the class prompt-{type} to the blockquote. For example, define a prompt of type info as follows:&gt; Example line for prompt.{: .prompt-info }SyntaxInline Code`inline code part`Filepath Hightlight`/path/to/a/file.extend`{: .filepath}Code BlockMarkdown symbols ``` can easily create a code block as follows:```This is a plaintext code snippet.```Specifying LanguageUsing ```{language} you will get a code block with syntax highlight:```yamlkey: value```  The Jekyll tag {% highlight %} is not compatible with this theme.Line NumberBy default, all languages except plaintext, console, and terminal will display line numbers. When you want to hide the line number of a code block, add the class nolineno to it:```shellecho 'No more line numbers!'```{: .nolineno }Specifying the FilenameYou may have noticed that the code language will be displayed at the top of the code block. If you want to replace it with the file name, you can add the attribute file to achieve this:```shell# content```{: file=\"path/to/file\" }Liquid CodesIf you want to display the Liquid snippet, surround the liquid code with {% raw %} and {% endraw %}:{% raw %}```liquid{% if product.title contains 'Pack' %}  This product's title contains the word Pack.{% endif %}```{% endraw %}Or adding render_with_liquid: false (Requires Jekyll 4.0 or higher) to the post’s YAML block.VideosYou can embed a video with the following syntax:{% include embed/{Platform}.html id='{ID}' %}Where Platform is the lowercase of the platform name, and ID is the video ID.The following table shows how to get the two parameters we need in a given video URL, and you can also know the currently supported video platforms.            Video URL      Platform      ID                  https://www.youtube.com/watch?v=H-B46URT4mg      youtube      H-B46URT4mg              https://www.twitch.tv/videos/1634779211      twitch      1634779211      Learn MoreFor more knowledge about Jekyll posts, visit the Jekyll Docs: Posts."
  },
  
  {
    "title": "Customize the Favicon",
    "url": "/posts/customize-the-favicon/",
    "categories": "Blogging, Tutorial",
    "tags": "favicon",
    "date": "2019-08-11 01:34:00 +0900",
    





    
    "snippet": "The favicons of Chirpy are placed in the directory assets/img/favicons/. You may want to replace them with your own. The following sections will guide you to create and replace the default favicons...",
    "content": "The favicons of Chirpy are placed in the directory assets/img/favicons/. You may want to replace them with your own. The following sections will guide you to create and replace the default favicons.Generate the faviconPrepare a square image (PNG, JPG, or SVG) with a size of 512x512 or more, and then go to the online tool Real Favicon Generator and click the button Select your Favicon image to upload your image file.In the next step, the webpage will show all usage scenarios. You can keep the default options, scroll to the bottom of the page, and click the button Generate your Favicons and HTML code to generate the favicon.Download &amp; ReplaceDownload the generated package, unzip and delete the following two from the extracted files:  browserconfig.xml  site.webmanifestAnd then copy the remaining image files (.PNG and .ICO) to cover the original files in the directory assets/img/favicons/ of your Jekyll site. If your Jekyll site doesn’t have this directory yet, just create one.The following table will help you understand the changes to the favicon files:            File(s)      From Online Tool      From Chirpy                  *.PNG      ✓      ✗              *.ICO      ✓      ✗        ✓ means keep, ✗ means delete.The next time you build the site, the favicon will be replaced with a customized edition."
  },
  
  {
    "title": "Getting Started",
    "url": "/posts/getting-started/",
    "categories": "Blogging, Tutorial",
    "tags": "getting started",
    "date": "2019-08-09 21:55:00 +0900",
    





    
    "snippet": "PrerequisitesFollow the instructions in the Jekyll Docs to complete the installation of the basic environment. Git also needs to be installed.InstallationCreating a New SiteThere are two ways to cr...",
    "content": "PrerequisitesFollow the instructions in the Jekyll Docs to complete the installation of the basic environment. Git also needs to be installed.InstallationCreating a New SiteThere are two ways to create a new repository for this theme:  Using the Chirpy Starter - Easy to upgrade, isolates irrelevant project files so you can focus on writing.  GitHub Fork - Convenient for custom development, but difficult to upgrade. Unless you are familiar with Jekyll and are determined to tweak or contribute to this project, this approach is not recommended.Option 1. Using the Chirpy StarterSign in to GitHub and browse to Chirpy Starter, click the button Use this template &gt; Create a new repository, and name the new repository USERNAME.github.io, where USERNAME represents your GitHub username.Option 2. GitHub ForkSign in to GitHub to fork Chirpy, and then rename it to USERNAME.github.io (USERNAME means your username).Next, clone your site to local machine. In order to build JavaScript files later, we need to install Node.js, and then run the tool:$ bash tools/init  If you don’t want to deploy your site on GitHub Pages, append option --no-gh at the end of the above command.The above command will:  Check out the code to the latest tag (to ensure the stability of your site: as the code for the default branch is under development).  Remove non-essential sample files and take care of GitHub-related files.  Build JavaScript files and export to assets/js/dist/, then make them tracked by Git.  Automatically create a new commit to save the changes above.Installing DependenciesBefore running local server for the first time, go to the root directory of your site and run:$ bundleUsageConfigurationUpdate the variables of _config.yml as needed. Some of them are typical options:  url  avatar  timezone  langSocial Contact OptionsSocial contact options are displayed at the bottom of the sidebar. You can turn on/off the specified contacts in file _data/contact.yml.Customizing StylesheetIf you need to customize the stylesheet, copy the theme’s assets/css/jekyll-theme-chirpy.scss to the same path on your Jekyll site, and then add the custom style at the end of it.Starting with version 6.2.0, if you want to overwrite the SASS variables defined in _sass/addon/variables.scss, copy the main sass file _sass/main.scss into the _sass directory in your site’s source, then create a new file _sass/variables-hook.scss and assign new value.Customing Static AssetsStatic assets configuration was introduced in version 5.1.0. The CDN of the static assets is defined by file _data/origin/cors.yml, and you can replace some of them according to the network conditions in the region where your website is published.Also, if you’d like to self-host the static assets, please refer to the chirpy-static-assets.Running Local ServerYou may want to preview the site contents before publishing, so just run it by:$ bundle exec jekyll sAfter a few seconds, the local service will be published at http://127.0.0.1:4000.DeploymentBefore the deployment begins, check out the file _config.yml and make sure the url is configured correctly. Furthermore, if you prefer the project site and don’t use a custom domain, or you want to visit your website with a base URL on a web server other than GitHub Pages, remember to change the baseurl to your project name that starts with a slash, e.g, /project-name.Now you can choose ONE of the following methods to deploy your Jekyll site.Deploy by Using GitHub ActionsThere are a few things to get ready for.  If you’re on the GitHub Free plan, keep your site repository public.      If you have committed Gemfile.lock to the repository, and your local machine is not running Linux, go the the root of your site and update the platform list of the lock-file:    $ bundle lock --add-platform x86_64-linux      Next, configure the Pages service.      Browse to your repository on GitHub. Select the tab Settings, then click Pages in the left navigation bar. Then, in the Source section (under Build and deployment), select GitHub Actions from the dropdown menu.        Push any commits to GitHub to trigger the Actions workflow. In the Actions tab of your repository, you should see the workflow Build and Deploy running. Once the build is complete and successful, the site will be deployed automatically.  At this point, you can go to the URL indicated by GitHub to access your site.Manually Build and DeployOn self-hosted servers, you cannot enjoy the convenience of GitHub Actions. Therefore, you should build the site on your local machine and then upload the site files to the server.Go to the root of the source project, and build your site as follows:$ JEKYLL_ENV=production bundle exec jekyll bUnless you specified the output path, the generated site files will be placed in folder _site of the project’s root directory. Now you should upload those files to the target server."
  },
  
  {
    "title": "Text and Typography",
    "url": "/posts/text-and-typography/",
    "categories": "Blogging, Demo",
    "tags": "typography",
    "date": "2019-08-08 12:33:00 +0900",
    





    
    "snippet": "This post is to show Markdown syntax rendering on Chirpy, you can also use it as an example of writing. Now, let’s start looking at text and typography.HeadingsH1 - headingH2 - headingH3 - headingH...",
    "content": "This post is to show Markdown syntax rendering on Chirpy, you can also use it as an example of writing. Now, let’s start looking at text and typography.HeadingsH1 - headingH2 - headingH3 - headingH4 - headingParagraphQuisque egestas convallis ipsum, ut sollicitudin risus tincidunt a. Maecenas interdum malesuada egestas. Duis consectetur porta risus, sit amet vulputate urna facilisis ac. Phasellus semper dui non purus ultrices sodales. Aliquam ante lorem, ornare a feugiat ac, finibus nec mauris. Vivamus ut tristique nisi. Sed vel leo vulputate, efficitur risus non, posuere mi. Nullam tincidunt bibendum rutrum. Proin commodo ornare sapien. Vivamus interdum diam sed sapien blandit, sit amet aliquam risus mattis. Nullam arcu turpis, mollis quis laoreet at, placerat id nibh. Suspendisse venenatis eros eros.ListsOrdered list  Firstly  Secondly  ThirdlyUnordered list  Chapter          Section                  Paragraph                    ToDo list  Job          Step 1      Step 2      Step 3      Description list  Sun  the star around which the earth orbits  Moon  the natural satellite of the earth, visible by reflected light from the sunBlock Quote  This line shows the block quote.Prompts  An example showing the tip type prompt.  An example showing the info type prompt.  An example showing the warning type prompt.  An example showing the danger type prompt.Tables            Company      Contact      Country                  Alfreds Futterkiste      Maria Anders      Germany              Island Trading      Helen Bennett      UK              Magazzini Alimentari Riuniti      Giovanni Rovelli      Italy      Linkshttp://127.0.0.1:4000FootnoteClick the hook will locate the footnote1, and here is another footnote2.Inline codeThis is an example of Inline Code.FilepathHere is the /path/to/the/file.extend.Code blocksCommonThis is a common code snippet, without syntax highlight and line number.Specific Languageif [ $? -ne 0 ]; then  echo \"The command was not successful.\";  #do the needful / exitfi;Specific filename@import  \"colors/light-typography\",  \"colors/dark-typography\";MathematicsThe mathematics powered by MathJax:\\[\\sum_{n=1}^\\infty 1/n^2 = \\frac{\\pi^2}{6}\\]When $a \\ne 0$, there are two solutions to $ax^2 + bx + c = 0$ and they are\\[x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}\\]Mermaid SVG gantt  title  Adding GANTT diagram functionality to mermaid  apple :a, 2017-07-20, 1w  banana :crit, b, 2017-07-23, 1d  cherry :active, c, after b a, 1dImagesDefault (with caption)Full screen width and center alignmentLeft alignedFloat to leftPraesent maximus aliquam sapien. Sed vel neque in dolor pulvinar auctor. Maecenas pharetra, sem sit amet interdum posuere, tellus lacus eleifend magna, ac lobortis felis ipsum id sapien. Proin ornare rutrum metus, ac convallis diam volutpat sit amet. Phasellus volutpat, elit sit amet tincidunt mollis, felis mi scelerisque mauris, ut facilisis leo magna accumsan sapien. In rutrum vehicula nisl eget tempor. Nullam maximus ullamcorper libero non maximus. Integer ultricies velit id convallis varius. Praesent eu nisl eu urna finibus ultrices id nec ex. Mauris ac mattis quam. Fusce aliquam est nec sapien bibendum, vitae malesuada ligula condimentum.Float to rightPraesent maximus aliquam sapien. Sed vel neque in dolor pulvinar auctor. Maecenas pharetra, sem sit amet interdum posuere, tellus lacus eleifend magna, ac lobortis felis ipsum id sapien. Proin ornare rutrum metus, ac convallis diam volutpat sit amet. Phasellus volutpat, elit sit amet tincidunt mollis, felis mi scelerisque mauris, ut facilisis leo magna accumsan sapien. In rutrum vehicula nisl eget tempor. Nullam maximus ullamcorper libero non maximus. Integer ultricies velit id convallis varius. Praesent eu nisl eu urna finibus ultrices id nec ex. Mauris ac mattis quam. Fusce aliquam est nec sapien bibendum, vitae malesuada ligula condimentum.Dark/Light mode &amp; ShadowThe image below will toggle dark/light mode based on theme preference, notice it has shadows.VideoReverse Footnote            The footnote source &#8617;              The 2nd footnote source &#8617;      "
  }
  
]

